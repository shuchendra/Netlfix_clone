{"version":3,"sources":["features/userSlice.js","app/store.js","Nav.js","axios.js","Requests.js","Banner.js","Row.js","screens/Homescreen.js","firebase.js","screens/SignupScreen.js","screens/LoginScreen.js","screens/ProfileScreen.js","App.js","reportWebVitals.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","status","reducers","login","state","action","payload","logout","actions","selectUser","store","configureStore","reducer","userReducer","Nav","show","handleShow","useState","navigate","useNavigate","transitionNavBar","window","scrollY","useEffect","addEventListener","removeEventListener","React","createElement","className","concat","onClick","src","alt","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","movie","setMovie","async","request","get","data","results","Math","floor","random","length","fetchData","console","log","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","backgroundRepeat","title","original_name","string","overview","n","substr","Row","_ref","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","poster_path","key","id","movieName","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","YouTube","videoId","opts","height","width","playerVars","autoplay","Homescreen","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getFirestore","getAuth","SignupScreen","emailRef","useRef","passwordRef","ref","placeholder","type","e","preventDefault","signInWithEmailAndPassword","current","value","authUser","alert","message","createUserWithEmailAndPassword","LoginScreen","signIn","setSignIn","Fragment","ProfileScreen","useSelector","email","signOut","App","dispatch","useDispatch","unsubscribe","onAuthStateChanged","userAuth","uid","Router","Routes","Route","path","element","Navigate","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","Provider"],"mappings":"iYAEA,MAKaA,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAPmB,CACnBC,KAAM,KACNC,OAAQ,QAORC,SAAU,CACRC,MAAOA,CAACC,EAAOC,KACbD,EAAMJ,KAAOK,EAAOC,SAEtBC,OAASH,IACPA,EAAMJ,KAAO,UAKN,MAAEG,EAAK,OAAEI,GAAWX,EAAUY,QAG9BC,EAAcL,GAAUA,EAAMJ,KAAKA,KAEjCJ,QAAiB,QCvBzB,MAAMc,EAAQC,YAAe,CAClCC,QAAS,CACPZ,KAAMa,K,6BCqCKC,MAtCf,WACI,MAAOC,EAAMC,GAAaC,oBAAS,GAC7BC,EAAWC,cAEXC,EAAkBA,KACjBC,OAAOC,QAAU,IAChBN,GAAW,GAGXA,GAAW,IAQrB,OALEO,oBAAU,KACNF,OAAOG,iBAAiB,SAASJ,GAC1B,IAAMC,OAAOI,oBAAoB,SAASL,IACnD,IAGFM,IAAAC,cAAA,OAAKC,UAAS,OAAAC,OAAUd,GAAQ,eAC5BW,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAA,OACIG,QAASA,IAAMZ,EAAS,KACxBU,UAAU,YACVG,IAAI,sEACJC,IAAI,KAGRN,IAAAC,cAAA,OACIG,QAASA,IAAMZ,EAAS,YACxBU,UAAU,cACVG,IAAI,+EACJC,IAAI,Q,MC5BLC,M,MAJEC,EAAMC,OAAO,CAC1BC,QAAS,iCCJb,MAAMC,EAAS,mCAeAC,MAZE,CACbC,cAAc,8BAADV,OAAgCQ,EAAO,mBACpDG,sBAAsB,wBAADX,OAA0BQ,EAAO,sBACtDI,cAAc,4BAADZ,OAA8BQ,EAAO,mBAClDK,kBAAkB,2BAADb,OAA6BQ,EAAO,mBACrDM,kBAAkB,2BAADd,OAA6BQ,EAAO,mBACrDO,kBAAkB,2BAADf,OAA6BQ,EAAO,mBACrDQ,mBAAmB,2BAADhB,OAA6BQ,EAAO,sBACtDS,mBAAmB,2BAADjB,OAA6BQ,EAAO,oBCqD3CU,MA1Df,WAGI,MAAOC,EAAOC,GAAYhC,mBAAS,IA2BrC,OAxBEM,oBAAU,MACN2B,iBACI,MAAMC,QAAgBjB,EAAMkB,IAAId,EAASE,uBACzCS,EACIE,EAAQE,KAAKC,QACbC,KAAKC,MAAMD,KAAKE,SAAWN,EAAQE,KAAKC,QAAQI,OAAS,KAOjEC,IACD,IAGHC,QAAQC,IAAIb,GASZtB,IAAAC,cAAA,UAAQC,UAAU,SAClBkC,MAAO,CACHC,eAAgB,QAChBC,gBAAgB,4CAADnC,OAAmD,OAALmB,QAAK,IAALA,OAAK,EAALA,EAAOiB,cAAa,MACjFC,mBAAoB,gBACpBC,iBAAkB,cAGlBzC,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,MAAIC,UAAU,kBACJ,OAALoB,QAAK,IAALA,OAAK,EAALA,EAAOoB,SAAc,OAALpB,QAAK,IAALA,OAAK,EAALA,EAAOlD,QAAa,OAALkD,QAAK,IAALA,OAAK,EAALA,EAAOqB,gBAE3C3C,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAAA,UAAQC,UAAU,kBAAiB,QACnCF,IAAAC,cAAA,UAAQC,UAAU,kBAAiB,YAEvCF,IAAAC,cAAA,MAAIC,UAAU,wBAtBJ0C,EAuBS,OAALtB,QAAK,IAALA,OAAK,EAALA,EAAOuB,SAvBJC,EAuBe,KAtBvB,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQZ,QAASc,EAAIF,EAAOG,OAAO,EAAED,EAAE,GAAG,MAAOF,KA0BxD5C,IAAAC,cAAA,OAAKC,UAAU,wBA3BnB,IAAkB0C,EAAOE,G,iCC4CdE,MAnEf,SAAYC,GAAyC,IAAxC,MAACP,EAAK,SAAEQ,EAAQ,WAAEC,GAAa,GAAMF,EAC9C,MAAOG,EAAQC,GAAa9D,mBAAS,KAC9B+D,EAAYC,GAAiBhE,mBAAS,IAuC/C,OArCEM,oBAAU,MACN2B,iBACI,MAAMC,QAAgBjB,EAAMkB,IAAIwB,GAChCG,EAAU5B,EAAQE,KAAKC,SAI3BK,IACD,CAACiB,IA8BJlD,IAAAC,cAAA,OAAKC,UAAU,OACXF,IAAAC,cAAA,UAAKyC,GAEL1C,IAAAC,cAAA,OAAKC,UAAU,gBACVkD,EAAOI,IACHlC,IACC6B,GAAc7B,EAAMmC,cACpBN,GAAc7B,EAAMiB,gBAClBvC,IAAAC,cAAA,OACIC,UAAS,eAAAC,OAAkBgD,GAAc,oBACzCO,IAAOpC,EAAMqC,GACbvD,QAASA,IA/BRkB,KACjB,GAAIgC,EACAC,EAAc,QACX,CAEH,MAAMK,EAAYtC,EAAMoB,OAASpB,EAAMlD,MAAQ,GAC/CyF,IAAaD,GACZE,KAAMC,IACH,MAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QACnDZ,EAAcS,EAAUtC,IAAI,QAE/B0C,MAAOC,IACJnC,QAAQmC,MAAM,0BAA2BA,GACzCd,EAAc,QAkBSe,CAAYhD,GAC3BjB,IAAG,GAAAF,OAxDV,wCAwDuBA,OACZgD,EAAa7B,EAAMmC,YAAcnC,EAAMiB,eAE3CjC,IAAKgB,EAAMlD,SAK1BkF,GAActD,IAAAC,cAACsE,IAAO,CAACC,QAASlB,EAAYmB,KAhDrC,CACRC,OAAQ,MACRC,MAAO,OACPC,WAAY,CACRC,SAAS,QCMNC,MAzBf,WACE,OACE9E,IAAAC,cAAA,OAAKC,UAAU,cACXF,IAAAC,cAACb,EAAG,MAEJY,IAAAC,cAACoB,EAAM,MAEPrB,IAAAC,cAAC+C,EAAG,CACAN,MAAM,oBACNQ,SAAWtC,EAASE,sBACpBqC,YAAU,IAEdnD,IAAAC,cAAC+C,EAAG,CAACN,MAAM,eAAeQ,SAAWtC,EAASC,gBAC9Cb,IAAAC,cAAC+C,EAAG,CAACN,MAAM,YAAYQ,SAAWtC,EAASG,gBAC3Cf,IAAAC,cAAC+C,EAAG,CAACN,MAAM,gBAAgBQ,SAAWtC,EAASE,wBAC/Cd,IAAAC,cAAC+C,EAAG,CAACN,MAAM,gBAAgBQ,SAAWtC,EAASK,oBAC/CjB,IAAAC,cAAC+C,EAAG,CAACN,MAAM,gBAAgBQ,SAAWtC,EAASM,oBAC/ClB,IAAAC,cAAC+C,EAAG,CAACN,MAAM,iBAAiBQ,SAAWtC,EAASO,qBAChDnB,IAAAC,cAAC+C,EAAG,CAACN,MAAM,eAAeQ,SAAWtC,EAASQ,uB,gCCrBtD,MAUM2D,EAAMC,YAVW,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKXC,GADKC,YAAaV,GACXW,YAAQX,I,MC4CNY,MAvDf,WAEI,MAAMC,EAAWC,iBAAO,MAClBC,EAAcD,iBAAO,MAiC7B,OACE7F,IAAAC,cAAA,OAAKC,UAAW,gBACZF,IAAAC,cAAA,YACED,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,SAAO8F,IAAKH,EAAUI,YAAY,QAAQC,KAAK,UAC/CjG,IAAAC,cAAA,SAAO8F,IAAKD,EAAaE,YAAY,WAAWC,KAAK,aACrDjG,IAAAC,cAAA,UAAQgG,KAAK,SAAS7F,QApBZ8F,IACdA,EAAEC,iBAEFC,YACEZ,EACAI,EAASS,QAAQC,MACjBR,EAAYO,QAAQC,OAErBxC,KAAMyC,IACLrE,QAAQC,IAAIoE,KAEbnC,MAAOC,GAAUmC,MAAMnC,EAAMoC,YASa,WAIvCzG,IAAAC,cAAA,UACED,IAAAC,cAAA,QAAMC,UAAU,sBAAqB,oBACrCF,IAAAC,cAAA,QAAMC,UAAU,qBAAqBE,QA3C3B8F,IAChBA,EAAEC,iBAGFO,YACElB,EACAI,EAASS,QAAQC,MACjBR,EAAYO,QAAQC,OAErBxC,KAAMyC,IACLrE,QAAQC,IAAIoE,KAEbnC,MAAOC,IACNmC,MAAMnC,EAAMoC,aA8BiD,gBCPtDE,MA1Cf,WACE,MAAMC,EAAQC,GAAatH,oBAAS,GAGpC,OACES,IAAAC,cAAA,OAAKC,UAAY,eACbF,IAAAC,cAAA,OAAKC,UAAU,2BACXF,IAAAC,cAAA,OACIC,UAAY,oBACZG,IAAI,sEACJC,IAAI,KAERN,IAAAC,cAAA,UAAQG,QAASA,IAAMyG,GAAU,GACjC3G,UAAU,uBAAsB,WAEhCF,IAAAC,cAAA,OAAKC,UAAU,2BAGnBF,IAAAC,cAAA,OAAKC,UAAY,qBACZ0G,EACG5G,IAAAC,cAAC0F,EAAY,MAEjB3F,IAAAC,cAAAD,IAAA8G,SAAA,KACI9G,IAAAC,cAAA,UAAI,4CACJD,IAAAC,cAAA,UAAI,uCACJD,IAAAC,cAAA,UAAI,0EAEJD,IAAAC,cAAA,OAAKC,UAAY,sBACbF,IAAAC,cAAA,YACID,IAAAC,cAAA,SAAOgG,KAAK,QAAQD,YAAY,kBAChChG,IAAAC,cAAA,UAAQG,QAASA,IAAMyG,GAAU,GACjC3G,UAAW,2BAA0B,qB,MC0C9C6G,MArEf,WACE,MAAMzI,EAAO0I,YAAYjI,GAEzB,OACEiB,IAAAC,cAAA,OAAKC,UAAW,iBACZF,IAAAC,cAACb,EAAG,MACJY,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,OAAKC,UAAU,uBAEbF,IAAAC,cAAA,OACEI,IAAI,+EACJC,IAAI,KAGNN,IAAAC,cAAA,OAAKC,UAAU,0BACbF,IAAAC,cAAA,UAAK3B,EAAK2I,OAEVjH,IAAAC,cAAA,OAAKC,UAAU,wBAEbF,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,UAAI,0BAEND,IAAAC,cAAA,cAAQ,cAGVD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,UAAI,oBAEND,IAAAC,cAAA,cAAQ,cAGVD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAI,cAEND,IAAAC,cAAA,cAAQ,cAGVD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UAAI,cAEND,IAAAC,cAAA,cAAQ,cAGVD,IAAAC,cAAA,UACEG,QAASA,IAAMoF,EAAK0B,UACpBhH,UAAU,0BACX,kB,QCdFiH,MAxCf,WACE,MAAM7I,EAAO0I,YAAYjI,GACnBqI,EAAWC,cAwBjB,OAtBAxH,oBAAU,KACR,MAAMyH,EAAc9B,EAAK+B,mBAAmBC,IAGxCJ,EAFCI,EAGC/I,EAAM,CACJgJ,IAAKD,EAASC,IACdR,MAAOO,EAASP,QAKXpI,OAIb,MAAO,IACEyI,GAER,CAACF,IAIFpH,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACyH,IAAM,KACL1H,IAAAC,cAAC0H,IAAM,KACL3H,IAAAC,cAAC2H,IAAK,CAACC,KAAK,IAAIC,QAASxJ,EAAO0B,IAAAC,cAAC6E,EAAU,MAAM9E,IAAAC,cAAC0G,EAAW,QAC7D3G,IAAAC,cAAC2H,IAAK,CAACC,KAAK,WAAWC,QAASxJ,EAAO0B,IAAAC,cAAC8G,EAAa,MAAM/G,IAAAC,cAAC8H,IAAQ,CAACC,GAAG,QACxEhI,IAAAC,cAAC2H,IAAK,CAACC,KAAK,IAAIC,QAAS9H,IAAAC,cAAC8H,IAAQ,CAACC,GAAG,YC9BjCC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrE,KAAKb,IAAkD,IAAjD,OAAEmF,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASvF,EACpEmF,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,M,MCCd,MAAMO,EAAYC,SAASC,eAAe,QAC7BC,qBAAWH,GAEnBI,OACH7I,IAAAC,cAACD,IAAM8I,WAAU,KACf9I,IAAAC,cAAC8I,IAAQ,CAAC/J,MAAOA,GACfgB,IAAAC,cAACkH,EAAG,SAQVc,M","file":"static/js/main.0b281b0f.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: null,\n  status: 'idle',\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  // The reducers field lets us define reducers and generate associated actions\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    }\n  },\n  \n});\nexport const { login, logout } = userSlice.actions;\n\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","import React, {useState,useEffect} from 'react';\r\nimport \"./Nav.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n    const [show, handleShow]= useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const transitionNavBar =() => {\r\n        if(window.scrollY > 100){\r\n            handleShow(true);\r\n        }\r\n        else{\r\n            handleShow(false);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\",transitionNavBar);\r\n        return () => window.removeEventListener(\"scroll\",transitionNavBar);\r\n    },[]);\r\n\r\n  return (\r\n    <div className= {`nav ${show && 'nav__black'}`}>\r\n        <div className='nav__contents'>\r\n            <img \r\n                onClick={() => navigate(\"/\")}\r\n                className='nav__logo'\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/7/7a/Logonetflix.png\" \r\n                alt=\"\"\r\n            />\r\n\r\n            <img \r\n                onClick={() => navigate(\"/profile\")}\r\n                className='nav__avatar'\r\n                src='https://i.pinimg.com/originals/5b/50/e7/5b50e75d07c726d36f397f6359098f58.png' \r\n                alt='' \r\n            />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav;","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n});\r\n\r\nexport default instance;","const API_KEY =\"54414a1a9cfa94eaa9fdf4b95d952607\";\r\n\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\n\r\nexport default requests;","import React, { useState, useEffect } from 'react';\r\nimport './Banner.css';\r\nimport axios from \"./axios\";\r\nimport requests from \"./Requests\";\r\n\r\n\r\nfunction Banner() {\r\n\r\n\r\n    const [movie, setMovie] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length - 1)\r\n                ]\r\n            );\r\n            return request;\r\n        }\r\n\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n\r\n    console.log(movie);\r\n\r\n\r\n    function truncate(string,n){\r\n        return string?.length > n ? string.substr(0,n-1)+'...': string;\r\n    }\r\n\r\n\r\n  return (\r\n    <header className=\"banner\"\r\n    style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n    }}\r\n    >\r\n        <div className='banner__contents'>\r\n            <h1 className='banner__title'>\r\n                {movie?.title || movie?.name || movie?.original_name}\r\n            </h1>\r\n            <div className='banner__buttons'>\r\n                <button className='banner__button'>Play</button>\r\n                <button className='banner__button'>My List</button>\r\n            </div>\r\n            <h1 className='banner__description'>\r\n                {truncate(movie?.overview , 150)}</h1>\r\n        </div>\r\n\r\n\r\n        <div className='banner--fadeBottom'/>\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nexport default Banner;","import React, { useEffect, useState } from 'react';\r\nimport \"./Row.css\";\r\nimport axios from \"./axios\";\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({title, fetchUrl, isLargeRow = false}) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n\r\n        fetchData();\r\n    }, [fetchUrl])\r\n\r\n    const opts ={\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay:1,\r\n        }\r\n    }\r\n\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl('');\r\n        } else {\r\n            // Use 'title' or 'original_title' depending on the data available from your API\r\n            const movieName = movie.title || movie.name || \"\";\r\n            movieTrailer(movieName)\r\n            .then((url) => {\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching trailer:', error);\r\n                setTrailerUrl('');\r\n            });\r\n        }\r\n    };\r\n    \r\n\r\n  return (\r\n    <div className=\"row\">\r\n        <h2>{title}</h2>\r\n\r\n        <div className='row__posters'>\r\n            {movies.map(\r\n                (movie) => \r\n                ((isLargeRow && movie.poster_path) ||\r\n                (!isLargeRow && movie.backdrop_path)) && (\r\n                    <img \r\n                        className= {`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                        key = {movie.id}\r\n                        onClick={() => handleClick(movie)}\r\n                        src={`${base_url}${\r\n                            isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                        }`} \r\n                        alt={movie.name} \r\n                    />\r\n                )\r\n            )}\r\n        </div>\r\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default Row;","import React from 'react';\r\nimport \"./Homescreen.css\";\r\nimport Nav from \"../Nav\"; \r\nimport Banner from \"../Banner\";\r\nimport requests from \"../Requests\";\r\nimport Row from \"../Row\";\r\n\r\nfunction Homescreen() {\r\n  return (\r\n    <div className=\"homeScreen\">\r\n        <Nav />\r\n\r\n        <Banner />\r\n\r\n        <Row \r\n            title='NETFLIX ORIGINALS'\r\n            fetchUrl ={requests.fetchNetflixOriginals}\r\n            isLargeRow\r\n        /> \r\n        <Row title='Trending Now' fetchUrl ={requests.fetchTrending} /> \r\n        <Row title='Top Rated' fetchUrl ={requests.fetchTopRated} /> \r\n        <Row title='Action Movies' fetchUrl ={requests.fetchNetflixOriginals} /> \r\n        <Row title='Comedy Movies' fetchUrl ={requests.fetchComedyMovies} /> \r\n        <Row title='Horror Movies' fetchUrl ={requests.fetchHorrorMovies} /> \r\n        <Row title='Romance Movies' fetchUrl ={requests.fetchRomanceMovies} /> \r\n        <Row title='Documentries' fetchUrl ={requests.fetchDocumentaries} />    \r\n        \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Homescreen;","import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBmEL3cFVS8L9jDvDyp1r1ojtnbW5pkW3M\",\r\n  authDomain: \"netflix-clone-3f3d8.firebaseapp.com\",\r\n  projectId: \"netflix-clone-3f3d8\",\r\n  storageBucket: \"netflix-clone-3f3d8.appspot.com\",\r\n  messagingSenderId: \"637428440721\",\r\n  appId: \"1:637428440721:web:8ffaeacb851f6d51f92930\",\r\n  measurementId: \"G-LB9JQG5ZDP\"\r\n}; \r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\nexport { db, auth };\r\n","import React, { useRef } from 'react';\r\nimport { auth } from '../firebase';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport \"./SignupScreen.css\";\r\n\r\nfunction SignupScreen() {\r\n\r\n    const emailRef = useRef(null);\r\n    const passwordRef = useRef(null);\r\n\r\n    const register = (e) => {\r\n      e.preventDefault();\r\n\r\n\r\n      createUserWithEmailAndPassword(\r\n        auth,\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n    };\r\n\r\n    const signIn = (e) => {\r\n      e.preventDefault();\r\n\r\n      signInWithEmailAndPassword(\r\n        auth,\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => alert(error.message));\r\n    };\r\n\r\n  return (\r\n    <div className =\"signupScreen\">\r\n        <form>\r\n          <h1>Sign In</h1>\r\n          <input ref={emailRef} placeholder='Email' type='email' />\r\n          <input ref={passwordRef} placeholder='Password' type='password' />\r\n          <button type=\"submit\" onClick={signIn}>\r\n            Sign In\r\n          </button>\r\n\r\n          <h4>\r\n            <span className='signupScreen__gray'>New to Netflix? </span> \r\n            <span className='signupScreen__link' onClick ={register}>Sign Up </span>\r\n          </h4>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignupScreen;","import React, { useState } from 'react';\r\nimport './LoginScreen.css'\r\nimport SignupScreen from './SignupScreen';\r\n\r\nfunction LoginScreen() {\r\n  const[signIn, setSignIn] = useState(false);\r\n\r\n\r\n  return (\r\n    <div className = \"loginScreen\">\r\n        <div className=\"loginScreen__background\">\r\n            <img \r\n                className = \"loginScreen__logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/7/7a/Logonetflix.png\" \r\n                alt=\"\"\r\n            />\r\n            <button onClick={() => setSignIn(true)}\r\n            className=\"loginScreen__button\">Sign In</button>\r\n            \r\n            <div className=\"loginScreen__gradient\"/>\r\n        </div>\r\n\r\n        <div className = \"loginScreen__body\">\r\n            {signIn ? (\r\n                <SignupScreen />\r\n            ) : (\r\n            <>\r\n                <h1>Unlimited films, TV programmes and more.</h1>\r\n                <h2>Watch anywhere. Cancel at any time.</h2>\r\n                <h3>Ready to watch? Enter your email to create or restart your membership.</h3>\r\n\r\n                <div className = \"loginScreen__input\">\r\n                    <form>\r\n                        <input type=\"email\" placeholder=\"Email Address\"/>\r\n                        <button onClick={() => setSignIn(true)}\r\n                        className =\"loginScreen__getstarted\">GET STARTED</button>\r\n                    </form>\r\n\r\n                </div>\r\n            </>\r\n            )} \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginScreen;","import React from 'react';\r\nimport \"./ProfileScreen.css\";\r\nimport Nav from '../Nav';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport { auth } from '../firebase';\r\n\r\n\r\nfunction ProfileScreen() {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <div className =\"profileScreen\">\r\n        <Nav />\r\n        <div className=\"profileScreen__body\">\r\n          <h1>Edit Profile</h1>\r\n          <div className='profileScreen__info'>\r\n\r\n            <img \r\n              src='https://i.pinimg.com/originals/5b/50/e7/5b50e75d07c726d36f397f6359098f58.png' \r\n              alt=\"\"\r\n            />\r\n\r\n            <div className='profileScreen__details'>\r\n              <h2>{user.email}</h2>\r\n\r\n              <div className='profileScreen__plans'>\r\n\r\n                <h3>Plans</h3>\r\n                <div className='plancontainer'>\r\n                  <div className='planinfo'>\r\n                    <h5>Premium</h5>\r\n                    <h6>Ultra HD (4K) and HDR</h6>\r\n                  </div>\r\n                  <button>Subscribe</button>\r\n                </div>\r\n\r\n                <div className='plancontainer'>\r\n                  <div className='planinfo'>\r\n                    <h5>Standard</h5>\r\n                    <h6>Full HD (1080p)</h6>\r\n                  </div>\r\n                  <button>Subscribe</button>\r\n                </div>\r\n\r\n                <div className='plancontainer'>\r\n                  <div className='planinfo'>\r\n                    <h5>Basic</h5>\r\n                    <h6>HD (720p)</h6>\r\n                  </div>\r\n                  <button>Subscribe</button>\r\n                </div>\r\n\r\n                <div className='plancontainer'>\r\n                  <div className='planinfo'>\r\n                    <h5>Mobile</h5>\r\n                    <h6>SD (480p)</h6>\r\n                  </div>\r\n                  <button>Subscribe</button>\r\n                </div>\r\n\r\n                <button \r\n                  onClick={() => auth.signOut()}\r\n                  className='profileScreen__signOut'\r\n                >\r\n                  Sign Out\r\n                </button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen;","import React,{useEffect} from 'react';\nimport './App.css';\nimport Homescreen from './screens/Homescreen';\nimport LoginScreen from './screens/LoginScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport { auth } from \"./firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from './features/userSlice';\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth =>{\n      if(userAuth){\n        //Logged in\n        dispatch(\n          login({\n            uid: userAuth.uid,\n            email: userAuth.email,\n          })\n        );\n      } else {\n        //Logged out\n        dispatch(logout());\n      }\n    });\n\n    return () => {\n      return unsubscribe;\n    }\n  }, [dispatch]);\n\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={user ? <Homescreen /> : <LoginScreen />} />\n          <Route path=\"/profile\" element={user ? <ProfileScreen /> : <Navigate to=\"/\" />} />\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n  \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}